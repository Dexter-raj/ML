import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

!pip install mlxtend

import csv
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

data = []
with open('../input/market-basket-optimization/Market_Basket_Optimisation.csv') as file:
    reader = csv.reader(file, delimiter=',')
    for row in reader:
        data +=[row]

data[1:10]

te = TransactionEncoder()
te_ary = te.fit(transactions).transform(transactions)
df = pd.DataFrame(te_ary, columns=te.columns_)

rules = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.2)

print("Association Rules:")
print(rules)

plt.scatter(rules['support'], rules['confidence'], alpha=0.5)
plt.xlabel('Support')
plt.ylabel('Confidence')
plt.title('Support vs Confidence')
plt.show()

rules_high_confidence = association_rules(frequent_itemsets, metric='confidence', min_threshold=0.5)

print("Association Rules with Higher Confidence:")
print(rules_high_confidence)

frequent_itemsets = apriori(df, min_support=0.01, use_colnames=True)


